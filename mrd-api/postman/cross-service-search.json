{
	"info": {
		"_postman_id": "fde1d991-f71c-4b9c-8496-2df2846735a2",
		"name": "Cross-Service Search MRD API Examples",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45159715"
	},
	"item": [
		{
			"name": "Cross Service Search",
			"item": [
				{
					"name": "Single keyword search: LIKE smoking /search?filters[0][operator]=LIKE&filters[0][keyword]=smoking&filters[0][condition]=",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"console.log(data);",
									"",
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type is application/json\", function() {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"});",
									"",
									"pm.test(\"The data returns a count\", function() {",
									"    pm.expect(data).to.have.property(\"count\");",
									"});",
									"",
									"pm.test(\"The data returns a pagination\", function() {",
									"    pm.expect(data).to.have.property(\"pagination\");",
									"});",
									"",
									"pm.test(\"The pagination contains page info\", function() {",
									"    pm.expect(data.pagination).to.have.property(\"current_page\");",
									"    pm.expect(data.pagination).to.have.property(\"total_pages\");",
									"    pm.expect(data.pagination).to.have.property(\"next_page\");",
									"    pm.expect(data.pagination).to.have.property(\"previous_page\");",
									"    pm.expect(data.pagination).to.have.property(\"last_page\");",
									"});",
									"",
									"pm.test(\"The data returns keyword property in first result \", function() {",
									"    pm.expect(data.data[0]).to.have.property(\"keyword\");",
									"});",
									"",
									"pm.test(\"The data returns description property in first result \", function() {",
									"    pm.expect(data.data[0]).to.have.property(\"description\");",
									"    pm.expect(data.data[0]['description']).length > 0;",
									"});",
									"",
									"pm.test(\"The data returns name property in first result \", function() {",
									"    pm.expect(data.data[0]).to.have.property(\"name\");",
									"    pm.expect(data.data[0]['name']).length > 0;",
									"});",
									"",
									"pm.test(\"The data returns url property in first result \", function() {",
									"    pm.expect(data.data[0]).to.have.property(\"url\");",
									"    pm.expect(data.data[0]['url']).length > 0;",
									"});",
									"",
									"pm.test(\"The data returns scope property in first result \", function() {",
									"    pm.expect(data.data[0]).to.have.property(\"scope\");",
									"    pm.expect(data.data[0]['scope']).length > 0;",
									"});",
									"",
									"pm.test(\"The search result matches the key word\", function() {",
									"    pm.expect(data.data[0]['keyword']).to.eql(\"smoking\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Mrd-Scopes",
								"value": "aliss conditions live-well medicines mental-health pregnancy",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{MRD_API_URL}}/search?filters[0][operator]=LIKE&filters[0][keyword]=smoking&filters[0][condition]=",
							"host": [
								"{{MRD_API_URL}}"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "filters[0][operator]",
									"value": "LIKE"
								},
								{
									"key": "filters[0][keyword]",
									"value": "smoking"
								},
								{
									"key": "filters[0][condition]",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Single keyword search but on page 2 and check pagination: LIKE smoking /search?filters[0][operator]=LIKE&filters[0][keyword]=smoking&filters[0][condition]=&page=2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type is application/json\", function() {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"});",
									"",
									"pm.test(\"The data returns a count\", function() {",
									"    pm.expect(data).to.have.property(\"count\");",
									"});",
									"",
									"pm.test(\"The data returns a pagination\", function() {",
									"    pm.expect(data).to.have.property(\"pagination\");",
									"});",
									"",
									"pm.test(\"The pagination contains page info\", function() {",
									"    pm.expect(data.pagination).to.have.property(\"current_page\");",
									"    pm.expect(data.pagination).to.have.property(\"total_pages\");",
									"    pm.expect(data.pagination).to.have.property(\"next_page\");",
									"    pm.expect(data.pagination).to.have.property(\"previous_page\");",
									"    pm.expect(data.pagination).to.have.property(\"last_page\");",
									"});",
									"pm.test(\"The pagination shows we are on page 2\", function() {",
									"    pm.expect(data.pagination.current_page).to.eql(2);",
									"    pm.expect(data.pagination.previous_page).to.eql(1);",
									"});",
									"",
									"pm.test(\"The data returns keyword property in first result \", function() {",
									"    pm.expect(data.data[0]).to.have.property(\"keyword\");",
									"});",
									"",
									"pm.test(\"The data returns description property in first result \", function() {",
									"    pm.expect(data.data[0]).to.have.property(\"description\");",
									"    pm.expect(data.data[0]['description']).length > 0;",
									"});",
									"",
									"pm.test(\"The data returns name property in first result \", function() {",
									"    pm.expect(data.data[0]).to.have.property(\"name\");",
									"    pm.expect(data.data[0]['name']).length > 0;",
									"});",
									"",
									"pm.test(\"The data returns url property in first result \", function() {",
									"    pm.expect(data.data[0]).to.have.property(\"url\");",
									"    pm.expect(data.data[0]['url']).length > 0;",
									"});",
									"",
									"pm.test(\"The data returns scope property in first result \", function() {",
									"    pm.expect(data.data[0]).to.have.property(\"scope\");",
									"    pm.expect(data.data[0]['scope']).length > 0;",
									"});",
									"",
									"pm.test(\"The search result matches the key word\", function() {",
									"    pm.expect(data.data[0]['keyword']).to.eql(\"smoking\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Mrd-Scopes",
								"value": "aliss conditions live-well medicines mental-health pregnancy",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{MRD_API_URL}}/search?filters[0][operator]=LIKE&filters[0][keyword]=smoking&filters[0][condition]=&page=2",
							"host": [
								"{{MRD_API_URL}}"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "filters[0][operator]",
									"value": "LIKE"
								},
								{
									"key": "filters[0][keyword]",
									"value": "smoking"
								},
								{
									"key": "filters[0][condition]",
									"value": ""
								},
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Keyword search with description included: LIKE smoking AND description LIKE electronic cigarette",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type is application/json\", function() {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"});",
									"",
									"pm.test(\"The data returns a count\", function() {",
									"    pm.expect(data).to.have.property(\"count\");",
									"});",
									"",
									"pm.test(\"The data returns a pagination\", function() {",
									"    pm.expect(data).to.have.property(\"pagination\");",
									"});",
									"",
									"pm.test(\"The pagination contains page info\", function() {",
									"    pm.expect(data.pagination).to.have.property(\"current_page\");",
									"    pm.expect(data.pagination).to.have.property(\"total_pages\");",
									"    pm.expect(data.pagination).to.have.property(\"next_page\");",
									"    pm.expect(data.pagination).to.have.property(\"previous_page\");",
									"    pm.expect(data.pagination).to.have.property(\"last_page\");",
									"});",
									"",
									"pm.test(\"The data returns keyword property\", function() {",
									"    pm.expect(data.data[0]).to.have.property(\"keyword\");",
									"});",
									"",
									"pm.test(\"The search result matches the key word\", function() {",
									"    pm.expect(data.data[0]['keyword']).to.eql(\"smoking\");",
									"});",
									"",
									"pm.test(\"The data returns description property\", function() {",
									"    pm.expect(data.data[0]).to.have.property(\"description\");",
									"});",
									"",
									"pm.test(\"The search result matches the description\", function() {",
									"    pm.expect(data.data[0]['description']).to.include(\"electronic cigarette\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Mrd-Scopes",
								"value": "aliss conditions live-well medicines mental-health pregnancy",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{MRD_API_URL}}/search?filters[0][operator]=LIKE&filters[0][keyword]=smoking&filters[0][condition]=AND&filters[1][operator]=LIKE&filters[1][description]=electronic cigarette&filters[1][condition]=",
							"host": [
								"{{MRD_API_URL}}"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "filters[0][operator]",
									"value": "LIKE"
								},
								{
									"key": "filters[0][keyword]",
									"value": "smoking"
								},
								{
									"key": "filters[0][condition]",
									"value": "AND"
								},
								{
									"key": "filters[1][operator]",
									"value": "LIKE"
								},
								{
									"key": "filters[1][description]",
									"value": "electronic cigarette"
								},
								{
									"key": "filters[1][condition]",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1 Keyword search as exact, 1 as LIKE and 1 as NOT to negate certain partial matches of the LIKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type is application/json\", function() {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"});",
									"",
									"pm.test(\"The data returns a count\", function() {",
									"    pm.expect(data).to.have.property(\"count\");",
									"});",
									"",
									"pm.test(\"items are all either headache or pain keywords\", function() {",
									"    data.data.forEach(function(item) {",
									"    let value = item.keyword;",
									"    pm.expect(value === \"headache\" || !value.includes(\"paint\")).to.be.true;",
									"    });",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Mrd-Scopes",
								"value": "aliss conditions live-well medicines mental-health pregnancy",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{MRD_API_URL}}/search?filters[0][operator]==&filters[0][keyword]=headache&filters[0][condition]=OR&filters[1][operator]=LIKE&filters[1][keyword]=pain&filters[1][condition]=NOT&filters[2][operator]=LIKE&filters[2][keyword]=paint&filters[2][condition]=",
							"host": [
								"{{MRD_API_URL}}"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "filters[0][operator]",
									"value": "="
								},
								{
									"key": "filters[0][keyword]",
									"value": "headache"
								},
								{
									"key": "filters[0][condition]",
									"value": "OR"
								},
								{
									"key": "filters[1][operator]",
									"value": "LIKE"
								},
								{
									"key": "filters[1][keyword]",
									"value": "pain"
								},
								{
									"key": "filters[1][condition]",
									"value": "NOT"
								},
								{
									"key": "filters[2][operator]",
									"value": "LIKE"
								},
								{
									"key": "filters[2][keyword]",
									"value": "paint"
								},
								{
									"key": "filters[2][condition]",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.sendRequest({",
					"    url: pm.environment.get(\"OAUTH_URL\")+\"/oauth2/token\",",
					"    method: 'POST',",
					"    header: {",
					"        'Accept': 'application/json',",
					"        'Content-Type': 'application/x-www-form-urlencoded',",
					"        'Authorization': \"Basic \"+pm.environment.get(\"OAUTH_MRD_CLIENT_AUTH_BASIC\")",
					"    },",
					"    body: {",
					"        mode: 'urlencoded',",
					"        urlencoded: [",
					"            {key: 'grant_type', value: 'client_credentials'},",
					"            {key: 'scope', value: 'aliss conditions live-well medicines mental-health pregnancy'}",
					"        ]",
					"    }",
					"},",
					"    (err, res) => {",
					"        // Set ACCESS_TOKEN",
					"        pm.variables.set(\"ACCESS_TOKEN\", res.json().access_token)",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
                {
                        "key": "MRD_API_URL",
                        "value": "https://api-mrd.mydex.org"
                }	
	]
}
